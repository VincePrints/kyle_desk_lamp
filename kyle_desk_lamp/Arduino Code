#include <Adafruit_NeoPixel.h>
#define BUTTON_PIN   2    
#define PIXEL_PIN    6
#define PIXEL_COUNT 22

const unsigned long LONG_PRESS_TIME = 250;
const int SHOW_TYPES[] = {0, 1, 2, 3, 4, 5};
const int NUM_SHOW_TYPES = sizeof(SHOW_TYPES) / sizeof(SHOW_TYPES[0]);

Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIXEL_COUNT, PIXEL_PIN, NEO_GRB + NEO_KHZ800);

bool oldState = HIGH;

unsigned long buttonTimer = 0;

bool buttonActive = false;
bool longPressActive = false;

int showType = 0;

void setup() {
  pinMode(BUTTON_PIN, INPUT_PULLUP);
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'
}

void loop() {
  if (digitalRead(BUTTON_PIN) == HIGH) {
    if (!buttonActive) {
      buttonActive = true;
      buttonTimer = millis();
    }
    if ((millis() - buttonTimer > LONG_PRESS_TIME) && (!longPressActive)) {
      longPressActive = true;
      strip.clear();
      startShow(showType);
    }
  } else {
    if (buttonActive) {
      if (longPressActive) {
        longPressActive = false;
      } else {
        strip.clear();
        strip.setPixelColor(showType, 0, 255, 0);
        strip.show();
        showType = (showType + 1) % NUM_SHOW_TYPES;
      }
      buttonActive = false;
    }
  }
}

void startShow(int i) {
  switch(i){
    case 0: colorWipe(strip.Color(0, 0, 0), 50);    // Black/off
            break;
    case 1: colorWipe(strip.Color(0, 255, 0), 100);  // Green
            break;
    case 2: pulse();
            colorWipe(strip.Color(0, 255, 0), 100);
            break;
    case 3: theaterChase(strip.Color(0, 250, 0), 50); // White
            colorWipe(strip.Color(0, 255, 0), 100);
            break;
    case 4: rainbowCycle(75);
            break;
    case 5: rainbowCycle(110);
            break;
  }
  colorWipe(strip.Color(0, 255, 0), 100);
}

void colorWipe(uint32_t c, uint8_t wait) {
  for(uint16_t i=0; i<strip.numPixels(); i++) {
    strip.setPixelColor(i, c);
    strip.show();
    unsigned long start = millis();
    while (millis() - start < wait) {}
  }
}

void pulse() {
  for (int i = 0; i < 1000; i++) {
    for (int j = 25; j < 200; j++) {
      for (int k = 0; k < strip.numPixels(); k++) {
        strip.setPixelColor(k, 0, j, 0);
      }
      strip.show();
      unsigned long start = millis();
      while (millis() - start < 15) {}
    }
    for (int j = 200; j > 25; j--) {
      for (int k = 0; k < strip.numPixels(); k++) {
        strip.setPixelColor(k, 0, j, 0);
      }
      strip.show();
      unsigned long start = millis();
      while (millis() - start < 15) {}
    }
    delay(10);
  }
}

void theaterChase(uint32_t c, uint8_t wait) {
  for (int j=0; j<10*1000; j++) {  //do 10 cycles of chasing
    for (int q=0; q < 3; q++) {
      for (int i=0; i < strip.numPixels(); i=i+3) {
        strip.setPixelColor(i+q, c);    //turn every third pixel on
      }
      strip.show();
      unsigned long start = millis();
      while (millis() - start < wait) {}
      for (int i=0; i < strip.numPixels(); i=i+3) {
        strip.setPixelColor(i+q, 0);        //turn every third pixel off
      }
    }
  }
}

void rainbowCycle(uint8_t wait) {
  for (int j = 0; j < 256*5; j++) { // 5 cycles of all colors on wheel
    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255));
    }
    strip.show();
    unsigned long start = millis();
    while (millis() - start < wait) {}
  }
}

uint32_t Wheel(byte WheelPos) {
  if(WheelPos < 85) {
    return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  }
  if(WheelPos < 170) {
    WheelPos -= 85;
    return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  }
  WheelPos -= 170;
  return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
}
